{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","calculateWinner","squares","lines","i","length","a","b","c","Board","this","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","slice","setState","concat","step","status","current","winner","moves","map","move","desc","jumpTo","handleClick","ReactDOM","render","document","getElementById"],"mappings":"wNAiBA,SAASA,EAAOC,GACZ,OACI,wBACIC,UAAU,SACVC,QAASF,EAAME,QAFnB,SAIKF,EAAMG,QAKnB,SAASC,EAAgBC,GAWrB,IAVA,IAAMC,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACnC,kBAAkBD,EAAMC,GAAxB,GAAOE,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIN,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,IAAML,EAAQI,KAAOJ,EAAQM,GAClE,OAAON,EAAQI,GAGvB,OAAO,K,IAGLG,E,kKACF,SAAaL,GAAI,IAAD,OACZ,OACI,cAACR,EAAD,CACII,MAAOU,KAAKb,MAAMK,QAAQE,GAC1BL,QAAS,kBAAM,EAAKF,MAAME,QAAQK,Q,oBAK9C,WACI,OACI,gCACI,sBAAKN,UAAU,YAAf,UACKY,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,MAEvB,sBAAKb,UAAU,YAAf,UACKY,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,MAEvB,sBAAKb,UAAU,YAAf,UACKY,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,a,GA1BnBC,IAAMC,WAiCpBC,E,kDACF,WAAYjB,GAAQ,IAAD,8BACf,cAAMA,IACDkB,MAAQ,CACTC,QAAS,CAAC,CACNd,QAASe,MAAM,GAAGC,KAAK,QAE3BC,WAAY,EACZC,SAAS,GAPE,E,+CAWnB,SAAYhB,GACR,IAAMY,EAAUN,KAAKK,MAAMC,QAAQK,MAAM,EAAGX,KAAKK,MAAMI,WAAa,GAE9DjB,EADUc,EAAQA,EAAQX,OAAS,GACjBH,QAAQmB,QAC5BpB,EAAgBC,IAAYA,EAAQE,KAIxCF,EAAQE,GAAKM,KAAKK,MAAMK,QAAU,IAAM,IACxCV,KAAKY,SAAS,CACVN,QAASA,EAAQO,OAAO,CAAC,CACrBrB,QAASA,KAEbiB,WAAYH,EAAQX,OACpBe,SAAUV,KAAKK,MAAMK,a,oBAI7B,SAAOI,GACHd,KAAKY,SAAS,CACVH,WAAYK,EACZJ,QAAWI,EAAO,IAAO,M,oBAIjC,WAAU,IAiBFC,EAjBC,OACCT,EAAUN,KAAKK,MAAMC,QACrBU,EAAUV,EAAQN,KAAKK,MAAMI,YAC7BQ,EAAS1B,EAAgByB,EAAQxB,SAEjC0B,EAAQZ,EAAQa,KAAI,SAACL,EAAMM,GAC7B,IAAMC,EAAOD,EACT,eAAiBA,EACjB,mBAEJ,OACI,6BACI,wBAAQ/B,QAAS,kBAAK,EAAKiC,OAAOF,IAAlC,SAA0CC,KADrCD,MAYjB,OAJIL,EADAE,EACS,WAAaA,EAEb,iBAAmBjB,KAAKK,MAAMK,QAAU,IAAM,KAGvD,sBAAKtB,UAAU,OAAf,UACI,qBAAKA,UAAU,aAAf,SACI,cAACW,EAAD,CACIP,QAASwB,EAAQxB,QACjBH,QAAS,SAACK,GAAD,OAAO,EAAK6B,YAAY7B,QAGzC,sBAAKN,UAAU,YAAf,UACI,8BAAM2B,IACN,6BAAKG,c,GAtENhB,IAAMC,WA+EzBqB,IAASC,OACL,cAACrB,EAAD,IACAsB,SAASC,eAAe,W","file":"static/js/main.9b0a6587.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n// class Square extends React.Component {\r\n//     render() {\r\n//         return (\r\n//             <button\r\n//                 className=\"square\"\r\n//                 onClick={this.props.value}\r\n//             >\r\n//                 {this.props.value}\r\n//             </button>\r\n//         );\r\n//     }\r\n// }\r\n\r\nfunction Square(props) {\r\n    return (\r\n        <button\r\n            className=\"square\"\r\n            onClick={props.onClick}\r\n        >\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nclass Board extends React.Component {\r\n    renderSquare(i) {\r\n        return (\r\n            <Square\r\n                value={this.props.squares[i]}\r\n                onClick={() => this.props.onClick(i)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null),\r\n            }],\r\n            stepNumber: 0,\r\n            xIsNext: true,\r\n        };\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares: squares,\r\n            }]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext,\r\n        });\r\n    }\r\n\r\n    jumpTo(step) {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext:  (step % 2) === 0,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n\r\n        const moves = history.map((step, move) => {\r\n            const desc = move ?\r\n                'Go to move #' + move :\r\n                'Go to game start';\r\n\r\n            return (\r\n                <li key={move}>\r\n                    <button onClick={()=> this.jumpTo(move)}>{desc}</button>\r\n                </li>\r\n            )\r\n        });\r\n\r\n        let status;\r\n        if (winner) {\r\n            status = 'Winner: ' + winner;\r\n        } else {\r\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board\r\n                        squares={current.squares}\r\n                        onClick={(i) => this.handleClick(i)}\r\n                    />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{status}</div>\r\n                    <ol>{moves}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}